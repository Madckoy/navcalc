// @Generated by ChatGPT ‚Äì reachability for the seekers of paths üòé

package com.devone.bot.core.navigation.evaluators;

import com.devone.bot.utils.BotBlockData;
import com.devone.bot.utils.BotCoordinate3D;

import java.util.*;
import java.util.stream.Collectors;

public class BotTargetReachabilityEvaluator {

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –¥–æ—Å—Ç–∏–∂–∏–º–∞ –ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —Ç–æ—á–∫–∞ target –∏–∑ –ø–æ–∑–∏—Ü–∏–∏ botPosition,
     * –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ —Å–ø–∏—Å–∫–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏–º—ã—Ö —Ç–æ—á–µ–∫.
     */
    public static boolean isReachable(BotCoordinate3D botPosition,
                                      BotCoordinate3D target,
                                      List<BotBlockData> navigablePoints) {
        if (botPosition.equals(target)) return true;

        Set<String> visited = new HashSet<>();
        Queue<BotCoordinate3D> queue = new LinkedList<>();
        queue.add(botPosition);
        visited.add(coordKey(botPosition));

        Set<String> navigableSet = navigablePoints.stream()
                .map(BotTargetReachabilityEvaluator::coordKey)
                .collect(Collectors.toSet());

        while (!queue.isEmpty()) {
            BotCoordinate3D current = queue.poll();

            for (int dx = -1; dx <= 1; dx++) {
                for (int dy = -1; dy <= 1; dy++) {
                    for (int dz = -1; dz <= 1; dz++) {
                        if (Math.abs(dx) + Math.abs(dy) + Math.abs(dz) != 1) continue;

                        BotCoordinate3D neighbor = new BotCoordinate3D(
                                current.x + dx,
                                current.y + dy,
                                current.z + dz);

                        String key = coordKey(neighbor);
                        if (!navigableSet.contains(key) || visited.contains(key)) continue;

                        if (neighbor.equals(target)) return true;

                        visited.add(key);
                        queue.add(neighbor);
                    }
                }
            }
        }

        return false;
    }

    private static String coordKey(BotCoordinate3D c) {
        return c.x + "," + c.y + "," + c.z;
    }
}
